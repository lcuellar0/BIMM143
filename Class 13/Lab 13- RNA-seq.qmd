---
title: "Class 13: RNA-Seq Mini project"
author: "Lorena Cuellar"
format: pdf
---



# RNAseq input data

```{r}
colData <- read.csv("GSE37704_metadata.csv", row.names=1)
head(colData)
```

```{r}
countData <- read.csv("GSE37704_featurecounts.csv", row.names=1)
head(countData)
```

> Q. Complete the code below to remove the troublesome first column from countData

There is a unwanted first column "length" in the countData. I will need to remove this first before going on to a further analysis

```{r}
counts <- countData[, -1]
head(counts)
```

> Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
# Filter count data where you have 0 read count across all samples.
to.keep <- rowSums(counts) > 0
counts <- counts[to.keep,]
head(counts)
```

How many gens do we have left

```{r}
nrow(counts)
```

```{r}
all(colnames(counts) == rownames(colData))
```

```{r}
library(DESeq2)
```

```{r}
dds <- DESeqDataSetFromMatrix(countData=counts,
                             colData=colData,
                             design=~condition)
dds <- DESeq(dds)
```

```{r}
res <- results(dds)
```

```{r}
res <- results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

> Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}

summary(res)
```

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

> Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )

```

> Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column= "SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

> Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

## Pathway Analysis

Recall that `gage()`

```{r}
library(pathview)
```

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```
Now try the `pathview()` function

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")

```


![](hsa04110.pathview.png)

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```


Here are the plots

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

![](hsa04640.pathview.png)

![](hsa00140.pathview.png)


> Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
## Focus on top 5 downregulated pathways 
keggrespathways <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```


```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")

```

![](hsa04110.pathview.png)

# Gene Ontology

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez

pathview(gene.data=foldchanges, pathway.id="hsa04110")

```
![](hsa04110.pathview.png)


# Section 4 Reactome Analysis

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```


```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```


> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

The pathways that was the most significant was the endosomal pathway. The significant pathways listed do not match the previous KEGG results. Factors that could cause differences between the two methods are that maybe they use different organization methods, I also think that the size of the databases could be a factor that causes differences and thus can affect our results significance.


